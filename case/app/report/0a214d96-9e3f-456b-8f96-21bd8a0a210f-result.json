{"name": "test_qy_aritcal_1_linux", "status": "broken", "statusDetails": {"message": "TypeError: setUpClass() missing 1 required positional argument: 'self'", "trace": "cls = _pytest.runner.CallInfo\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x0000021008909AE8>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], _T]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: \"Optional[Union[Type[BaseException], Tuple[Type[BaseException], ...]]]\" = None,\n    ) -> \"CallInfo[_T]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result = func()  # type: Optional[_T]\n\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:294: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:247: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nC:\\Python\\Python36\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Python\\Python36\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Python\\Python36\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:141: in pytest_runtest_setup\n    item.session._setupstate.prepare(item)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:435: in prepare\n    raise e\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\runner.py:432: in prepare\n    col.setup()\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\unittest.py:154: in setup\n    self._request._fillfixtures()\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:568: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:581: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:601: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:683: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:1052: in execute\n    raise val.with_traceback(tb)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:1117: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\fixtures.py:915: in call_fixture_func\n    fixture_result = next(generator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <case.app.test_query_aritcal.TestQyAritcal testMethod=test_qy_aritcal_0__>\nrequest = <SubRequest '_UnitTestCase__pytest_class_setup' for <TestCaseFunction test_qy_aritcal_0__>>\n\n    @pytest.fixture(scope=scope, autouse=True)\n    def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:\n        if _is_skipped(self):\n            reason = self.__unittest_skip_why__\n            pytest.skip(reason)\n        if setup is not None:\n            if pass_self:\n                setup(self, request.function)\n            else:\n>               setup()\nE               TypeError: setUpClass() missing 1 required positional argument: 'self'\n\nC:\\Python\\Python36\\lib\\site-packages\\_pytest\\unittest.py:131: TypeError"}, "start": 1598513369536, "stop": 1598513369536, "uuid": "38d97b0e-02d8-47d3-81e1-022c3324c355", "historyId": "326ec8d35dbb6236fb4ca0c85af6a44a", "testCaseId": "664e62726d15f149e9ed8550698efe8e", "fullName": "case.app.test_query_aritcal.TestQyAritcal#test_qy_aritcal_1_linux", "labels": [{"name": "parentSuite", "value": "case.app"}, {"name": "suite", "value": "test_query_aritcal"}, {"name": "subSuite", "value": "TestQyAritcal"}, {"name": "host", "value": "zyt"}, {"name": "thread", "value": "3532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.app.test_query_aritcal"}]}